{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAoCA,SAASC,EAAcC,EAAUC,GAG/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3BC,YAAW,KACaC,KAAKC,SAAW,GAIpCJ,EAAQ,uBAAqBH,QAAiBC,OAG9CG,EAAO,sBAAoBJ,QAAiBC,OAG5CO,cAAc,IACfP,OApDM,CACXQ,OAAQC,SAASC,cAAc,QAC/BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,OAAQJ,SAASC,cAAc,0BAG5BF,OAAOM,iBAAiB,UAAUC,IACrCA,EAAEC,iBACF,MAAMC,EAAWF,EAAEG,OAAOD,SACpBE,EAAeF,EAASJ,OAAOO,MAC/BC,EAAcC,OAAOL,EAASjB,MAAMoB,OACpCG,EAAaD,OAAOL,EAASO,KAAKJ,OACxC,IAAIK,EAAmB,EACnBC,EAAkB,EAEtB,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAAcQ,GAAK,EACrCD,GAAmB,EACnBD,EAAmBJ,EAAcE,EAAaI,EAC9C7B,EAAc4B,EAAiBD,GAAkBG,MAAKC,IACtDC,EAAAlC,GAASmC,OAAOC,QAAQH,MAEzBI,OAAOC,IAENJ,EAAAlC,GAASmC,OAAOI,QAAQD","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  onForm: document.querySelector('form'),\n  delayFirst: document.querySelector('input[name=\"delay\"]'),\n  stepDelay: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.onForm.addEventListener('submit', e => {\n  e.preventDefault();\n  const elements = e.target.elements;\n  const amountValues = elements.amount.value;\n  const delayValues = Number(elements.delay.value);\n  const stepValues = Number(elements.step.value);\n  let delayStepCounter = 0;\n  let promisePosition = 0;\n\n  for (let i = 0; i < amountValues; i += 1){\n    promisePosition += 1;\n    delayStepCounter = delayValues + stepValues * i;\n    createPromise(promisePosition, delayStepCounter).then(sucsesMessage => {\n    Notiflix.Notify.success(sucsesMessage);\n  })\n  .catch((rejectMessage) => {\n    \n    Notiflix.Notify.failure(rejectMessage);\n  });\n    \n  }\n});\n\n\n\n\n\n\nfunction createPromise(position, delay) {\n\n  \n  return new Promise((resolve, reject) => {\n    \n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n\n      }\n      promisCounter = 0;\n    }, delay);\n  })\n  \n  \n};\n//  createPromise(2, 1500)\n\n//   .then(({ position, delay }) => {\n//     Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n    \n//     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","promisCounter","onForm","document","querySelector","delayFirst","stepDelay","amount","addEventListener","e","preventDefault","elements","target","amountValues","value","delayValues","Number","stepValues","step","delayStepCounter","promisePosition","i","then","sucsesMessage","$parcel$interopDefault","Notify","success","catch","rejectMessage","failure"],"version":3,"file":"03-promises.3ccb6976.js.map"}