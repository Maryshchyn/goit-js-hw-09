{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAWA,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAE3BC,YAAW,KACaC,KAAKC,SAAW,GAIpCJ,EAAQ,C,SAACH,E,MAAUC,IAGnBG,EAAO,C,SAACJ,E,MAAUC,MAEnBA,OAxBM,CACXO,OAAQC,SAASC,cAAc,QAC/BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,OAAQJ,SAASC,cAAc,0BAG5BI,OAAOC,iBAAiB,SAAUhB,GAsBtCA,EAAc,EAAG,MAEfiB,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBgB,EAAApB,GAASqB,OAAOC,QAAQ,uBAAqBnB,QAAiBC,UAE/DmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAElBgB,EAAApB,GAASqB,OAAOG,QAAQ,sBAAoBrB,QAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  onForm: document.querySelector('form'),\n  delayFirst: document.querySelector('input[name=\"delay\"]'),\n  stepDelay: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.button.addEventListener('submit', createPromise,);\n\n\nfunction createPromise(position, delay) {\n  \n  return new Promise((resolve, reject) => {\n    \n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        // Fulfill\n        resolve({position, delay});\n      } else {\n        // Reject\n        reject({position, delay});\n      }\n    }, delay);\n  })\n  \n  \n};\n createPromise(2, 1500)\n\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    \n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n\n\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","onForm","document","querySelector","delayFirst","stepDelay","amount","button","addEventListener","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.69400641.js.map"}